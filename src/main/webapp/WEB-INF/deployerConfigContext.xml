<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
	| deployerConfigContext.xml centralizes into one file some of the declarative configuration that
	| all CAS deployers will need to modify.
	|
	| This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.  
	| The beans declared in this file are instantiated at context initialization time by the Spring 
	| ContextLoaderListener declared in web.xml.  It finds this file because this
	| file is among those declared in the context parameter "contextConfigLocation".
	|
	| By far the most common change you will need to make in this file is to change the last bean
	| declaration to replace the default SimpleTestUsernamePasswordAuthenticationHandler with
	| one implementing your approach for authenticating usernames and passwords.
	+-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.infusionsoft"/>

    <!--
        | This bean declares our AuthenticationManager.  The CentralAuthenticationService service bean
        | declared in applicationContext.xml picks up this AuthenticationManager by reference to its id,
        | "authenticationManager".  Most deployers will be able to use the default AuthenticationManager
        | implementation and so do not need to change the class of this bean.  We include the whole
        | AuthenticationManager here in the userConfigContext.xml so that you can see the things you will
        | need to change in context.
        +-->
    <bean id="authenticationManager" class="org.jasig.cas.authentication.AuthenticationManagerImpl">
        <!--
              | This is the List of CredentialToPrincipalResolvers that identify what Principal is trying to authenticate.
              | The AuthenticationManagerImpl considers them in order, finding a CredentialToPrincipalResolver which
              | supports the presented credentials.
              |
              | AuthenticationManagerImpl uses these resolvers for two purposes.  First, it uses them to identify the Principal
              | attempting to authenticate to CAS /login .  In the default configuration, it is the DefaultCredentialsToPrincipalResolver
              | that fills this role.  If you are using some other kind of credentials than UsernamePasswordCredentials, you will need to replace
              | DefaultCredentialsToPrincipalResolver with a CredentialsToPrincipalResolver that supports the credentials you are
              | using.
              |
              | Second, AuthenticationManagerImpl uses these resolvers to identify a service requesting a proxy granting ticket.
              | In the default configuration, it is the HttpBasedServiceCredentialsToPrincipalResolver that serves this purpose.
              | You will need to change this list if you are identifying services by something more or other than their callback URL.
              +-->
        <property name="credentialsToPrincipalResolvers">
            <list>
                <!--
                        | UsernamePasswordCredentialsToPrincipalResolver supports the UsernamePasswordCredentials that we use for /login
                        | by default and produces SimplePrincipal instances conveying the username from the credentials.
                        |
                        | If you've changed your LoginFormAction to use credentials other than UsernamePasswordCredentials then you will also
                        | need to change this bean declaration (or add additional declarations) to declare a CredentialsToPrincipalResolver that supports the
                        | Credentials you are using.
                        +-->
                <bean class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver">
                    <property name="attributeRepository" ref="attributeRepository"/>
                </bean>

                <!--
                        | HttpBasedServiceCredentialsToPrincipalResolver supports HttpBasedCredentials.  It supports the CAS 2.0 approach of
                        | authenticating services by SSL callback, extracting the callback URL from the Credentials and representing it as a
                        | SimpleService identified by that callback URL.
                        |
                        | If you are representing services by something more or other than an HTTPS URL whereat they are able to
                        | receive a proxy callback, you will need to change this bean declaration (or add additional declarations).
                        +-->
                <bean class="org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver"/>
            </list>
        </property>

        <!--
              | Whereas CredentialsToPrincipalResolvers identify who it is some Credentials might authenticate,
              | AuthenticationHandlers actually authenticate credentials.  Here we declare the AuthenticationHandlers that
              | authenticate the Principals that the CredentialsToPrincipalResolvers identified.  CAS will try these handlers in turn
              | until it finds one that both supports the Credentials presented and succeeds in authenticating.
              +-->
        <property name="authenticationHandlers">
            <list>
                <!-- Authenticates services via an SSL callback. -->
                <bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
                      p:httpClient-ref="httpClient">
                    <!--<property name="requireSecure" value="false"/>-->
                </bean>

                <ref bean="infusionsoftAuthenticationHandler"/>
            </list>
        </property>
    </bean>

    <bean id="serviceRegistryDao" class="org.jasig.cas.services.JpaServiceRegistryDaoImpl"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <bean id="auditTrailManager" class="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager"/>

    <bean id="healthCheckMonitor" class="org.jasig.cas.monitor.HealthCheckMonitor">
        <property name="monitors">
            <list>
                <bean class="org.jasig.cas.monitor.MemoryMonitor"
                      p:freeMemoryWarnThreshold="10"/>
                <!--
                  NOTE
                  The following ticket registries support SessionMonitor:
                    * DefaultTicketRegistry
                    * JpaTicketRegistry
                  Remove this monitor if you use an unsupported registry.
                -->
                <bean class="org.jasig.cas.monitor.SessionMonitor"
                      p:ticketRegistry-ref="ticketRegistry"
                      p:serviceTicketCountWarnThreshold="5000"
                      p:sessionCountWarnThreshold="100000"/>
            </list>
        </property>
    </bean>

</beans>
